steps:
- pwsh: |
    . "$env:POWERSHELLPATH/load-save-pipeline-parameters.ps1"
    $parameters = Read-Pipeline-Parameters "$(Agent.BuildDirectory)\export-pipeline-parameters.json"
    Write-Host "gitAccessUrl:" $parameters.gitAccessUrl
    Write-Host "project:" $parameters.project
    Write-Host "repo:" $parameters.repo
    $paramRepoName = $parameters.repo
    Write-Host "branch:" $parameters.branch
    Write-Host "branchToCreate:" $parameters.branchToCreate
    Write-Host "commitMessage:" $parameters.commitMessage
    Write-Host "email:" $parameters.email
    Write-Host "serviceConnectionName:" $parameters.serviceConnectionName
    $paramServiceConnectionName = $parameters.serviceConnectionName
    Write-Host "serviceConnectionUrl:" $parameters.serviceConnectionUrl
    Write-Host "solutionName:" $parameters.solutionName
    $paramSolutionName = $parameters.solutionName
    Write-Host "userName:" $parameters.userName
    Write-Host "configurationData:" $parameters.configurationData | ConvertTo-Json

    Write-Host "##vso[task.setVariable variable=solutionName]$paramSolutionName"
    Write-Host "##vso[task.setVariable variable=repo]$paramRepoName"
    Write-Host "##vso[task.setVariable variable=ServiceConnectionName]$paramServiceConnectionName"
    

    Write-Host $paramRepoName
    Write-Host $paramSolutionName
    Write-Host $paramServiceConnectionName

    Write-Host "Looking for $(Build.SourcesDirectory)\$paramRepoName\$paramSolutionName\config\ConfigurationMigrationData\configurationmigration_schema.xml"

    if(Test-Path "$(Build.SourcesDirectory)\$paramRepoName\$paramSolutionName\config\ConfigurationMigrationData\configurationmigration_schema.xml") {
        Write-Host 'Configuraiton Migration Schema found. Will run data export'
        Write-Host "##vso[task.setVariable variable=runDataExport]true"
    }
    else {
        Write-Host 'Configuraiton Migration Schema not found. Will not run data export'
        Write-Host "##vso[task.setVariable variable=runDataExport]false"
    }
  displayName: 'Output Export Parameters'

- task: microsoft-IsvExpTools.PowerPlatform-BuildTools.export-data.PowerPlatformExportData@2
  inputs:
    authenticationType: PowerPlatformSPN
    PowerPlatformSPN: 'https://org7e5c0996.crm4.dynamics.com/' #'$(ServiceConnectionName)'
    SchemaFile: '$(Build.SourcesDirectory)\$(repo)\$(solutionName)\config\ConfigurationMigrationData\configurationmigration_schema.xml'
    DataFile: '$(Build.SourcesDirectory)\$(repo)\$(solutionName)\config\ConfigurationMigrationData\ConfigurationMigrationData.zip'
    Overwrite: true
  displayName: 'Power Platform Export Data '
  condition: and(succeeded(), eq(variables.runDataExport, 'true'))
  
- pwsh: |
    Expand-Archive -Path "$(Build.SourcesDirectory)\$(repo)\$(solutionName)\config\ConfigurationMigrationData\ConfigurationMigrationData.zip" -DestinationPath "$(Build.SourcesDirectory)\$(repo)\$(solutionName)\config\ConfigurationMigrationData\" -Force
    Remove-Item -Path "$(Build.SourcesDirectory)\$(repo)\$(solutionName)\config\ConfigurationMigrationData\ConfigurationMigrationData.zip"
  displayName: 'Expand ConfigurationMigrationData.zip archive'
  condition: and(succeeded(), eq(variables.runDataExport, 'true'))
